version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: booking_db
      POSTGRES_USER: booking_user
      POSTGRES_PASSWORD: booking_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U booking_user"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build: .
    command: gunicorn booking_project.wsgi:application --bind 0.0.0.0:8000 --workers 4
    volumes:
      - .:/code
      - static_volume:/code/staticfiles
      - media_volume:/code/media
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  fastapi:
    build:
      context: .
      dockerfile: Dockerfile.fastapi
    volumes:
      - ./fastapi_app:/app
    ports:
      - "8001:8001"
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy

  celery:
    build: .
    command: celery -A booking_project worker -l info
    volumes:
      - .:/code
    env_file:
      - .env
    depends_on:
      - postgres
      - redis

  celery-beat:
    build: .
    command: celery -A booking_project beat -l info
    volumes:
      - .:/code
    env_file:
      - .env
    depends_on:
      - postgres
      - redis

  flower:
    build: .
    command: celery -A booking_project flower
    ports:
      - "5555:5555"
    env_file:
      - .env
    depends_on:
      - redis

  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/static
      - media_volume:/media
    ports:
      - "80:80"
    depends_on:
      - web
      - fastapi

volumes:
  postgres_data:
  static_volume:
  media_volume: